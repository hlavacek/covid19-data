{"version":3,"sources":["components/ApplicationBar.tsx","pages/Map/MapContext.ts","pages/Map/Map.tsx","pages/Map/GenericLayers/Layers.tsx","pages/Map/GenericLayers/TileLayer.ts","pages/Map/GenericLayers/VectorLayer.ts","pages/Map/GenericLayers/DistrictLayer.tsx","pages/Map/MapPage.tsx","App.tsx","reportWebVitals.ts","i18n/en.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ApplicationBar","classes","t","useTranslation","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","MapContext","React","createContext","Map","zoom","center","children","mapRef","useRef","useState","map","setMap","useEffect","options","view","ol","layers","controls","overlays","mapObject","current","setTarget","undefined","getView","setZoom","setCenter","Provider","value","ref","defaultProps","Layers","TileLayer","source","zIndex","useContext","tileLayer","OLTileLayer","addLayer","setZIndex","removeLayer","VectorLayer","style","vectorLayer","OLVectorLayer","vectorSource","VectorSource","url","process","format","GeoJSON","DistrictLayer","MapPage","fromLonLat","OSM","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","translations","translation","application","i18n","use","initReactI18next","init","resources","en","translationsEn","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9447d12.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst ApplicationBar: React.FC = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton\n          edge=\"start\"\n          className={classes.menuButton}\n          color=\"inherit\"\n          aria-label=\"menu\"\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          {t('application.title')}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default ApplicationBar;\n","import React from 'react';\nimport ol from 'ol';\n\nconst MapContext = React.createContext<ol.Map | null>(null);\n\nexport default MapContext;\n","import React, { useRef, useState, useEffect } from 'react';\nimport * as ol from 'ol';\nimport * as olCoordinate from 'ol/coordinate';\nimport './Map.css';\nimport MapContext from './MapContext';\n\ninterface Props {\n  zoom: number;\n  center: olCoordinate.Coordinate;\n  children?: React.ReactNode;\n}\n\nconst Map: React.FunctionComponent<Props> = ({\n  zoom,\n  center,\n  children = null,\n}: Props) => {\n  const mapRef = useRef<HTMLDivElement>(null);\n  const [map, setMap] = useState<ol.Map | null>(null);\n  // on component mount\n  useEffect(() => {\n    const options = {\n      view: new ol.View({ zoom, center }),\n      layers: [],\n      controls: [],\n      overlays: [],\n    };\n    const mapObject = new ol.Map(options);\n    if (mapRef.current) {\n      mapObject.setTarget(mapRef.current);\n    }\n\n    setMap(mapObject);\n    return () => mapObject.setTarget(undefined);\n  }, [center, zoom]);\n\n  // zoom change handler\n  useEffect(() => {\n    if (!map) return;\n    map.getView().setZoom(zoom);\n  }, [zoom, map]);\n\n  // center change handler\n  useEffect(() => {\n    if (!map) return;\n    map.getView().setCenter(center);\n  }, [center, map]);\n\n  return (\n    <MapContext.Provider value={map}>\n      <div ref={mapRef} className=\"ol-map\">\n        {children}\n      </div>\n    </MapContext.Provider>\n  );\n};\n\nMap.defaultProps = {\n  children: null,\n};\nexport default Map;\n","import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\nconst Layers: React.FC<Props> = ({ children }: Props) => {\n  return <>{children}</>;\n};\n\nexport default Layers;\n","import { useContext, useEffect } from 'react';\nimport OLTileLayer from 'ol/layer/Tile';\nimport TileSource from 'ol/source/Tile';\nimport MapContext from '../MapContext';\n\ninterface Props {\n  source: TileSource;\n  zIndex: number;\n}\nconst TileLayer: React.FC<Props> = ({ source, zIndex = 0 }) => {\n  const map = useContext(MapContext);\n  useEffect(() => {\n    if (!map) return () => {};\n\n    const tileLayer = new OLTileLayer({\n      source,\n      zIndex,\n    });\n    map.addLayer(tileLayer);\n    tileLayer.setZIndex(zIndex);\n    return () => {\n      if (map) {\n        map.removeLayer(tileLayer);\n      }\n    };\n  }, [map, source, zIndex]);\n  return null;\n};\nexport default TileLayer;\n","import { useContext, useEffect } from 'react';\nimport OLVectorLayer from 'ol/layer/Vector';\nimport Style, { StyleFunction } from 'ol/style/Style';\nimport VectorSource from 'ol/source/Vector';\nimport MapContext from '../MapContext';\n\ninterface Props {\n  source: VectorSource;\n  zIndex: number;\n  style?: Style | Style[] | StyleFunction;\n}\n\nconst VectorLayer: React.FC<Props> = ({ source, style, zIndex = 0 }: Props) => {\n  const map = useContext(MapContext);\n  useEffect(() => {\n    if (!map) return () => {};\n    const vectorLayer = new OLVectorLayer({\n      source,\n      style,\n    });\n    map.addLayer(vectorLayer);\n    vectorLayer.setZIndex(zIndex);\n    return () => {\n      if (map) {\n        map.removeLayer(vectorLayer);\n      }\n    };\n  }, [map, source, style, zIndex]);\n  return null;\n};\nexport default VectorLayer;\n","import React from 'react';\n\nimport VectorSource from 'ol/source/Vector';\nimport GeoJSON from 'ol/format/GeoJSON';\n\nimport VectorLayer from './VectorLayer';\n\nconst vectorSource = new VectorSource({\n  url: `${process.env.PUBLIC_URL}/data/districts_epsg_4326.geojson`,\n  format: new GeoJSON(),\n});\n\nconst DistrictLayer: React.FC = () => (\n  <VectorLayer source={vectorSource} zIndex={1} />\n);\n\nexport default DistrictLayer;\n","import React, { useState } from 'react';\nimport { fromLonLat } from 'ol/proj';\nimport OSM from 'ol/source/OSM';\nimport Map from './Map';\nimport Layers from './GenericLayers/Layers';\nimport TileLayer from './GenericLayers/TileLayer';\nimport DistrictLayer from './GenericLayers/DistrictLayer';\n\nconst MapPage: React.FC = () => {\n  const [center] = useState([19.70590523920156, 48.7163185502946]);\n  const [zoom] = useState(8);\n\n  return (\n    <Map center={fromLonLat(center)} zoom={zoom}>\n      <Layers>\n        <TileLayer source={new OSM()} zIndex={0} />\n        <DistrictLayer />\n      </Layers>\n    </Map>\n  );\n};\n\nexport default MapPage;\n","import React from 'react';\nimport ApplicationBar from './components/ApplicationBar';\nimport './App.css';\nimport MapPage from './pages/Map/MapPage';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ApplicationBar />\n      <MapPage />\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals: (onPerfEntry?: ReportHandler) => void = (\n  onPerfEntry?: ReportHandler\n) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const translations = {\n  translation: {\n    application: {\n      title: 'Slovakia COVID19',\n    },\n  },\n};\n\nexport default translations;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'fontsource-roboto';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport translationsEn from './i18n/en';\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources: {\n      en: translationsEn,\n    },\n    lng: 'en',\n    fallbackLng: 'en',\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}